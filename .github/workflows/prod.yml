name: Production

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version for the deployment'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-akto:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "8"
          architecture: x64
      - uses: actions/setup-node@v2
        with:
          node-version: '17'
      - name: Setup Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "29.2"
      - uses: bufbuild/buf-action@v1
        with:
          setup_only: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-south-1

      - name: Run mvn package
        run: mvn package
      
      - name: DockerHub login
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build, tag, and push the image to DockerHub
        id: build-image-dockerhub
        env:
          ECR_REGISTRY: aktosecurity
          ECR_REPOSITORY: akto-api-security
          IMAGE_TAG_1: latest
          IMAGE_TAG_2: 1.0.0
        run: |
          docker buildx create --use
          # Build a docker container and push it to DockerHub
          cd apps/data-ingestion-service
          docker buildx build --platform linux/arm64/v8,linux/amd64 -t $ECR_REGISTRY/data-ingestion-service:$IMAGE_TAG_1 -t $ECR_REGISTRY/data-ingestion-service:$IMAGE_TAG_2 . --push

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11