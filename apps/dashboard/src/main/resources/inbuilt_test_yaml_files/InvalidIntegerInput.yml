id: INVALID_INTEGER_INPUT
info:
  name: Invalid Integer Causing Buffer Overflow and Leaking Sensitive Details Via Verbose Error Message
  description: "The error response contains information which may help in more sophisticated attacks"
  details: >
          "The error response contains information about the database or an inconsistent error message.
          Inconsistencies in error messages can reveal important clues on how a site works, 
          and what information is present under the covers. For example, when a user tries to provide invalid input
          inside POST request body and if server is not validating input properly, it may result in providing server
          code error trace with details. This information could be used to facilitate more attacks."	
  impact: "This information can be used to facilitate more sophisticated attacks on your application"
  category:
    name: BLE
    shortName: Business Logic Errors
    displayName: Business Logic Errors (BLE)
  subCategory: INVALID_INTEGER_INPUT
  severity: LOW
  tags: 
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-community/Improper_Error_Handling"
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling"
  cwe:
    - CWE-728
    - CWE-388
    
wordLists:
  invalidIntList:
    - "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz"
    - "  "
    - "23 5"
    - "-256"
    - "2147483648"
    - "214748364899"
    - "214748364821474836482147483648"
    - "0"
    - "null"
    - "NULL"
    - "\0"
    - ""
    
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  or:
    request_payload:
      for_one:
        value:
          regex: \d+
        key:
          extract: keyVar
    query_param:
      for_one:
        value:
          regex: \d+
        key:
          extract: queryVar

execute:
  type: single
  requests:
    - req:
      - modify_body_param:
          keyVar: ${invalidIntList}
      - modify_query_param:
          queryVar: ${invalidIntList}
validate:
  response_code:
    - response_payload:
        and:
          - length:
              gt: 0
          - contains_either:
              - "Invalid integer value"
              - "Integer value out of range"
              - "Expected type integer but found type string"
              - "Invalid format for integer type"
              - "InvalidIntegerException"