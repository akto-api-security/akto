id: JWT_SIGNING_IN_CLIENT_SIDE
info:
  name: JWT signing in client side
  description: "This test checks for JWT client side signing"
  details: >
            "Client-side JWT signing test: verifies if the code includes JWT signing functions.
            This ensures the implementation of secure token signing mechanisms within the client-side application."
  impact: "An attacker could potentially exploit the client-side JWT signing vulnerability to manipulate or forge JWT tokens, leading to unauthorized access, privilege escalation, session hijacking, or impersonation attacks. It is crucial to address this vulnerability promptly to protect the integrity and security of the system."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: JWT_SIGNING_IN_CLIENT_SIDE
  severity: LOW
  tags: 
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://hackerone.com/reports/638635"
  cwe:
    - CWE-287
    - CWE-347

api_selection_filters:
  response_payload:
    contains_either: 
      - "jwt.sign("
      - "jose.JWS.createSign("
      - "JWTSimple.encode("
      - "jwt.encode("
  url:
    extract: urlVar

execute:
  type: single
  requests:
    - req:
      - modify_url: ${urlVar}

validate:
  response_payload:
    contains_either: 
      - "jwt.sign("
      - "jose.JWS.createSign("
      - "JWTSimple.encode("
      - "jwt.encode("