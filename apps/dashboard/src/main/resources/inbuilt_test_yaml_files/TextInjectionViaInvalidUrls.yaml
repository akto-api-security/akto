id: TEXT_INJECTION_VIA_INVALID_URLS
info:
  name: Text injection via invalid URLs
  description: "Injecting malicious content into a web url to mislead users."
  details: >
            "Content spoofing vulnerability is a web application security flaw where attackers inject malicious content into user-supplied data.
            By exploiting this vulnerability, attackers can manipulate the displayed content, misleading users. An example involves redirecting users from valid website to a fake website. "
  impact: "This attack is typically used as, or in conjunction with, social engineering because the attack is exploiting a code-based vulnerability and a userâ€™s trust."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: TEXT_INJECTION_VIA_INVALID_URLS
  severity: LOW
  tags: 
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-community/attacks/Content_Spoofing"
    - "https://infosecwriteups.com/text-based-injection-content-spoofing-96e9eb1615d8"

api_selection_filters:
  url:
    extract: urlVar

execute:
  type: single
  requests:
    - req:
      - modify_url: ${urlVar}/has%20been%20changed%20to%20https%3A%2F%2Fwww.fakewebsite.com.%20so%20please%20visit%20https%3A%2F%2Fwww.fakewebsite.com%20as%20your%20requested%20link

validate:
  response_payload:
    contains_either:
      - "has been changed to https://www.fakewebsite.com. so please visit https://www.fakewebsite.com as your requested link"
  response_headers:
    for_one:
      key:
        eq: Content-Type
      value:
        contains_either:  "text/html"

