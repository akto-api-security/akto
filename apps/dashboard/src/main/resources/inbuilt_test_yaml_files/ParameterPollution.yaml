id: PARAMETER_POLLUTION
info:
  name: "BOLA by HTTP Parameter Pollution"
  description: "Attacker can access resources of any user by introducing multiple parameters with same name."
  details: >
            "The endpoint appears to be vulnerable to broken object level authorization attack. The original request was replayed by adding private resources in query params (for eg: <b>user_id=1234&account_id=436783).</b>.
            The server responded with 2XX success codes and less than <b>{{percentageMatch}}%</b> of the response body matched with original response body. <br><br>"
            "<b>Background:</b> Object level authorization is an access control mechanism that is usually implemented at the code level to validate that one user can only access objects that they should have access to."
  impact: "Unauthorized access can result in data disclosure to unauthorized parties, data loss, or data manipulation. Unauthorized access to objects can also lead to full account takeover."
  category:
    name: BOLA
    shortName: BOLA
    displayName: Broken Object Level Authorization (BOLA)
  subCategory: PARAMETER_POLLUTION
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/04-Testing_for_HTTP_Parameter_Pollution"
    - "https://www.madlab.it/slides/BHEU2011/whitepaper-bhEU2011.pdf"
    - "https://www.akto.io/blog/what-is-broken-object-level-authorization-bola"
    - "https://github.com/OWASP/API-Security/blob/master/2019/en/src/0xa1-broken-object-level-authorization.md"
    - "https://cwe.mitre.org/data/definitions/284.html"
auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  private_variable_context:
    gt: 0
    extract: private_var
execute:
  type: single
  requests:
    - req:
        - add_query_param:
            private_var.key: ${private_var.value}
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    percentage_match:
      lt: 80
    length:
      gt: 0