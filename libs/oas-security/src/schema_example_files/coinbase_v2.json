{
  "swagger": "2.0",
  "info": {
    "title": "Coinbase API",
    "description": "The Coinbase v2 API",
    "version": "2.0.0",
    "contact": {
      "name": "CoinFabrik",
      "url": "http://www.coinfabrik.com/"
    }
  },
  "host": "api.coinbase.com",
  "schemes": [
    "https"
  ],
  "basePath": "/v2",
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "coinbaseAccessCode": []
    }
  ],
  "paths": {
    "/users/{user_id}": {
      "get": {
        "summary": "Show a user",
        "description": "Get any user’s public information with their ID.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "coinbaseAccessCode": []
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "The requested user",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Show current user",
        "description": "Get current user’s public information. To get user’s email or private information, use permissions wallet:user:email and wallet:user:read.",
        "security": [
          {
            "coinbaseAccessCode": []
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "The requested user",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update current user",
        "description": "Modify current user and their preferences.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:user:update"
            ]
          }
        ],
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Properties to update",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "time_zone": {
                  "type": "string"
                },
                "native_currency": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated user",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/auth": {
      "get": {
        "summary": "Show authorization information",
        "description": "Get current user’s authorization information including granted scopes and send limits when using OAuth2 authentication.",
        "security": [
          {
            "coinbaseAccessCode": []
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "The requested user",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "method": {
                      "type": "string"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "oauth_meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "summary": "List accounts",
        "description": "Lists current user’s accounts to which the authentication method has access to.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:accounts:read"
            ]
          }
        ],
        "tags": [
          "Accounts"
        ],
        "responses": {
          "200": {
            "description": "The accounts",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/Pagination"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Account"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create account",
        "description": "Creates a new account for user.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:accounts:create"
            ]
          }
        ],
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account_properties",
            "description": "Account properties",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The account name"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created account",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "summary": "Show an account",
        "description": "Show current user’s account. To access user’s primary account, primary keyword can be used instead of the account id in the URL.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:accounts:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "responses": {
          "200": {
            "description": "The account",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update account",
        "description": "Modifies user’s account name.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:accounts:update"
            ]
          }
        ],
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "account_properties",
            "description": "Properties to update",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "New account name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The account",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete account",
        "description": "Removes user’s account. In order to remove an account it can’t be\n\n- Primary account\n- Account with non-zero balance\n- Fiat account\n- Vault with a pending withdrawal\n",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:accounts:delete"
            ]
          }
        ],
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/accounts/{account_id}/primary": {
      "get": {
        "summary": "Set account as primary",
        "description": "Promote an account as primary account.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:accounts:update"
            ]
          }
        ],
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The account in question",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/addresses": {
      "get": {
        "summary": "List addresses",
        "description": "Lists addresses for an account.\n\n*Important*: Addresses should be considered one time use only.\n",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:addresses:read"
            ]
          }
        ],
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The addresses",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/Pagination"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Address"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create address",
        "description": "Creates a new address for an account. As all the arguments are optinal, it’s possible just to do a empty POST which will create a new address. This is handy if you need to create new receive addresses for an account on-demand.\nAddresses can be created for all account types. With fiat accounts, funds will be received with Instant Exchange.\n",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:addresses:create"
            ]
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "address_properties",
            "description": "Properties to update",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Address label"
                }
              }
            }
          }
        ],
        "tags": [
          "Addresses"
        ],
        "responses": {
          "201": {
            "description": "The created address",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/addresses/{address_id}": {
      "get": {
        "summary": "Show an address",
        "description": "Show an individual address for an account.\nRegular bitcoin address can be used in place of address_id but the address has to be associated to the correct account.\n  \n*Important* Addresses should be considered one time use only. \n",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:addresses:read"
            ]
          }
        ],
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "name": "address_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The address",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/addresses/{address_id}/transactions": {
      "get": {
        "summary": "List address’s transactions",
        "description": "list transactions that have been sent to a specific address. Regular bitcoin address can be used in place of address_id but the address has to be associated to the correct account.\n",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:transactions:read"
            ]
          }
        ],
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "name": "address_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The transactions",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/Pagination"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/transactions": {
      "get": {
        "summary": "List transactions",
        "description": "Lists account’s transactions. See Transaction resource for more information.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:transactions:read"
            ]
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The transactions",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/Pagination"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Send or request money",
        "description": "Type=send\n=========\n\nSend funds to a bitcoin address or email address. No transaction fees are required for off blockchain transactions, and Coinbase waives fees for on-blockchain transactions greater than 0.0001 BTC, up to a threshold of 25 per day. Read more about free transactions.\n\nWhen used with OAuth2 authentication, this endpoint requires two factor authentication unless used with wallet:transactions:send:bypass-2fa scope.\n\nIf the user is able to buy bitcoin, they can send funds from their fiat account using instant exchange feature. Buy fees will be included in the created transaction and the recipient will receive the user defined amount.\n\nTo create a multisig transaction, visit Multisig documentation.\n\nType=request\n============\n\nRequests money from an email address.\n",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:transactions:send",
              "wallet:transactions:request"
            ]
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "transaction_options",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type should be \"send\" for sending money, or \"request\" for requesting money."
                },
                "to": {
                  "type": "string",
                  "description": "A bitcoin address (send only) or an email of the recipient (send or request)"
                },
                "amount": {
                  "type": "string",
                  "description": "Amount to be sent/requested."
                },
                "currency": {
                  "type": "string",
                  "description": "Currency for the amount"
                },
                "description": {
                  "type": "string",
                  "description": "Notes to be included in the email that the recipient receives"
                },
                "skip_notifications": {
                  "type": "boolean",
                  "description": "(Send only) Don’t send notification emails for small amounts (e.g. tips)"
                },
                "fee": {
                  "type": "string",
                  "description": "(Send only) Transaction fee in BTC if you would like to pay it. Coinbase pays transaction fees on payments greater than or equal to 0.0001 BTC. But for smaller amounts you may want to add your own amount. Fees can be added as a string, such as 0.0005"
                },
                "idem": {
                  "type": "string",
                  "description": "(Send only) A token to ensure idempotence. If a previous transaction with the same idem parameter already exists for this sender, that previous transaction will be returned and a new one will not be created. Max length 100 characters"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The pending transaction",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/transactions/{transaction_id}": {
      "get": {
        "summary": "Show a transaction",
        "description": "Show an individual transaction for an account. See Transaction resource for more information.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:transactions:read"
            ]
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "name": "transaction_id",
            "in": "path",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested transaction",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel request money",
        "description": "Lets a user cancel a money request. Money requests can be canceled by the sender or the recipient.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:transactions:request"
            ]
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "name": "transaction_id",
            "in": "path",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success response (no content)"
          }
        }
      }
    },
    "/accounts/{account_id}/transactions/{transaction_id}/complete": {
      "post": {
        "summary": "Complete request money",
        "description": "Lets the recipient of a money request complete the request by sending money to the user who requested the money. This can only be completed by the user to whom the request was made, not the user who sent the request.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:transactions:request"
            ]
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "name": "transaction_id",
            "in": "path",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response (no content)"
          }
        }
      }
    },
    "/accounts/{account_id}/transactions/{transaction_id}/resend": {
      "post": {
        "summary": "Re-send request money",
        "description": "Lets the user resend a money request. This will notify recipient with a new email.",
        "security": [
          {
            "coinbaseAccessCode": [
              "wallet:transactions:request"
            ]
          }
        ],
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "name": "transaction_id",
            "in": "path",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response (no content)"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "coinbaseAccessCode": {
      "type": "oauth2",
      "scopes": {
        "wallet:accounts:read": "List user’s accounts and their balances",
        "wallet:accounts:update": "Update account (e.g. change name)",
        "wallet:accounts:create": "Create a new account (e.g. BTC wallet)",
        "wallet:accounts:delete": "Delete existing account",
        "wallet:addresses:read": "List account’s bitcoin addresses",
        "wallet:addresses:create": "Create new bitcoin addresses for wallets",
        "wallet:buys:read": "List account’s buys",
        "wallet:buys:create": "Buy bitcoin",
        "wallet:checkouts:read": "List user’s merchant checkouts",
        "wallet:checkouts:create": "Create a new merchant checkout",
        "wallet:deposits:read": "List account’s deposits",
        "wallet:deposits:create": "Create a new deposit",
        "wallet:notifications:read": "List user’s notifications",
        "wallet:orders:read": "List user’s merchant order",
        "wallet:orders:create": "Create a new merchant order",
        "wallet:orders:refund": "Refund a merchant order",
        "wallet:payment-methods:read": "List user’s payment methods (e.g. bank accounts)",
        "wallet:payment-methods:delete": "Remove existing payment methods",
        "wallet:payment-methods:limits": "Get detailed limits for payment methods (useful for performing buys and sells). This permission is to be used together with wallet:payment-methods:read",
        "wallet:sells:read": "List account’s sells",
        "wallet:sells:create": "Sell bitcoin",
        "wallet:transactions:read": "List account’s transactions",
        "wallet:transactions:send": "Send bitcoin",
        "wallet:transactions:request": "Request bitcoin from a Coinbase user",
        "wallet:transactions:transfer": "Transfer funds between user’s two bitcoin accounts",
        "wallet:user:read": "List detailed user information (public information is available without this permission)",
        "wallet:user:update": "Update current user",
        "wallet:user:email": "Read current user’s email address",
        "wallet:withdrawals:read": "List account’s withdrawals",
        "wallet:withdrawals:create": "Create a new withdrawal"
      },
      "flow": "accessCode",
      "authorizationUrl": "https://www.coinbase.com/oauth/authorize",
      "tokenUrl": "http://www.coinbase.com/oauth/token"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required" : ["id", "avatar_url", "resource", "resource_path"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        },
        "name": {
          "type": ["string", "null"],
          "description": "User’s public name"
        },
        "username": {
          "type": ["string", "null"]
        },
        "profile_location": {
          "type": ["string", "null"],
          "description": "Location for user’s public profile"
        },
        "profile_bio": {
          "type": ["string", "null"],
          "description": "Bio for user’s public profile"
        },
        "profile_url": {
          "type": ["string", "null"],
          "description": "Public profile location if user has one"
        },
        "avatar_url": {
          "type": "string",
          "description": "User’s avatar url"
        },
        "resource": {
          "type": "string"
        },
        "resource_path": {
          "type": "string"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "ending_before": {
          "type": ["integer", "null"]
        },
        "starting_after": {
          "type": ["integer", "null"]
        },
        "limit": {
          "type": ["integer", "null"]
        },
        "order": {
          "type": ["string", "null"]
        },
        "previous_uri": {
          "type": ["string", "null"]
        },
        "next_uri": {
          "type": ["string", "null"]
        }
      }
    },
    "MoneyHash": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        },
        "name": {
          "type": "string",
          "description": "User or system defined name"
        },
        "primary": {
          "type": "boolean",
          "description": "Indicates if this is a primary account"
        },
        "type": {
          "type": "string",
          "description": "Account’s type. Available values: wallet, fiat, multisig, vault, multisig_vault"
        },
        "currency": {
          "type": "string",
          "description": "Account's currency"
        },
        "balance": {
          "$ref": "#/definitions/MoneyHash"
        },
        "native_balance": {
          "$ref": "#/definitions/MoneyHash"
        },
        "created_at": {
          "type": "string",
          "description": "Timestamp indicating when was the account created."
        },
        "updated_at": {
          "type": "string",
          "description": "Timestamp indicating when was the account last updated."
        },
        "resource": {
          "type": "string",
          "description": "This value is always 'account'."
        },
        "resource_path": {
          "type": "string"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        },
        "address": {
          "type": "string",
          "description": "Bitcoin address"
        },
        "name": {
          "type": ["string", "null"],
          "description": "User defined label for the address"
        },
        "created_at": {
          "type": "string",
          "description": "Timestamp indicating when was the address was created."
        },
        "updated_at": {
          "type": "string",
          "description": "Timestamp indicating when was the address last updated."
        },
        "resource": {
          "type": "string",
          "description": "This value is always 'address'."
        },
        "resource_path": {
          "type": "string"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        },
        "type": {
          "type": "string",
          "description": "Transaction type"
        },
        "status": {
          "type": "string",
          "description": "Status"
        },
        "amount": {
          "$ref": "#/definitions/MoneyHash"
        },
        "native_amount": {
          "$ref": "#/definitions/MoneyHash"
        },
        "description": {
          "type": ["string", "null"],
          "description": "User defined description"
        },
        "instant_exchange": {
          "type": "boolean",
          "description": "Indicator if the transaction was instant exchanged (received into a bitcoin address for a fiat account)"
        },
        "created_at": {
          "type": "string",
          "description": "Timestamp indicating when was the address was created."
        },
        "updated_at": {
          "type": "string",
          "description": "Timestamp indicating when was the address last updated."
        },
        "resource": {
          "type": "string",
          "description": "This value is always 'address'."
        },
        "resource_path": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "description": "Detailed information about the transaction"
        },
        "network": {
          "type": ["object", "null"],
          "description": "Information about bitcoin network including network transaction hash if transaction was on-blockchain. Only available for certain types of transactions"
        },
        "to": {
          "type": ["object", "null"],
          "description": "The receiving party of a debit transaction. Usually another resource but can also be another type like email. Only available for certain types of transactions"
        },
        "from": {
          "type": ["object", "null"],
          "description": "The originating party of a credit transaction. Usually another resource but can also be another type like bitcoin network. Only available for certain types of transactions"
        },
        "address": {
          "type": ["object", "null"],
          "description": "Associated bitcoin address for received payment"
        },
        "application": {
          "type": ["object", "null"],
          "description": "Associated OAuth2 application"
        }
      }
    }
  }
}